export const Available = () => import('../../../../components/Available.vue' /* webpackChunkName: "components/available" */).then(c => wrapFunctional(c.default || c))
export const ContactGrid = () => import('../../../../components/ContactGrid.vue' /* webpackChunkName: "components/contact-grid" */).then(c => wrapFunctional(c.default || c))
export const MainGrid = () => import('../../../../components/MainGrid.vue' /* webpackChunkName: "components/main-grid" */).then(c => wrapFunctional(c.default || c))
export const SecondGrid = () => import('../../../../components/SecondGrid.vue' /* webpackChunkName: "components/second-grid" */).then(c => wrapFunctional(c.default || c))
export const ThirdGrid = () => import('../../../../components/ThirdGrid.vue' /* webpackChunkName: "components/third-grid" */).then(c => wrapFunctional(c.default || c))
export const Three = () => import('../../../../components/three.vue' /* webpackChunkName: "components/three" */).then(c => wrapFunctional(c.default || c))
export const ProjectsCategory = () => import('../../../../components/Projects/Category.vue' /* webpackChunkName: "components/projects-category" */).then(c => wrapFunctional(c.default || c))
export const ProjectsList = () => import('../../../../components/Projects/ProjectsList.vue' /* webpackChunkName: "components/projects-list" */).then(c => wrapFunctional(c.default || c))

// nuxt/nuxt.js#8607
function wrapFunctional(options) {
  if (!options || !options.functional) {
    return options
  }

  const propKeys = Array.isArray(options.props) ? options.props : Object.keys(options.props || {})

  return {
    render(h) {
      const attrs = {}
      const props = {}

      for (const key in this.$attrs) {
        if (propKeys.includes(key)) {
          props[key] = this.$attrs[key]
        } else {
          attrs[key] = this.$attrs[key]
        }
      }

      return h(options, {
        on: this.$listeners,
        attrs,
        props,
        scopedSlots: this.$scopedSlots,
      }, this.$slots.default)
    }
  }
}
